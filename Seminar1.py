# C#/C++/C/Java - статическая типизация данных
# Python/JavaScript - динамическая типизация данных

# int age = 27; -> []

# age = 27 -> class 'int' -> []

# Компилятор и Интерпритатор

# name = input("Введите свое имя: ")
# print(f'Hello, {name}!')
# print(type(name))

# Базовые функции:

# str() int() float()
# C#(int) <= |2147000000|

# age = int(input("Введите ваш возвраст: "))
# print(f'Ваш возвраст {age}')

# dlina = float(input("Введите длину стопы: "))
# print(int(dlina))

# print(124 + 'Den')
# print(str(124) + 'Den')

# n = 5
# m = 2
# print(n // m)  # выводит целую часть
# print(n / m)  # выводит целую и дробные части
# print(n % m)  # выводит остаток от числа
# print(n ** m)

# print(5 > 7)  # False
# print(5 < 9)  # True

# print(int(5 > 7))  # False
# print(int(5 < 9))  # True

# &&(and) - конъюкция(логическое умножение)
# ||(or) - дизъюнкция(логическое сложение)
# !(not) - отрицание(противоположное значение)

# if not False:
#     print(1)

# n = int(input("Введите число: "))
# if n > 7 and n < 11 or n > 100:
#     print('yes')
# else:
#     print('no')

# Задача № 1.
# За день машина проезжает n километров. Сколько дней нужно,
# чтобы проехать по маршруту длиной m километров?
# При выполнении этой задачи нельзя пользоваться
# условной инструкцией if и циклами.

# import math

# n = 700
# m = 700

# days = math.ceil(m / n)

# print(days)

# Задача № 2.
# В какой-то школе решили взять три новых математических класса
# и оборудовать кабинеты для них новыми партами.
# За каждой партой могут сидеть два ученика.
# Известно количество учащихся в каждом из трех классов.
# Вы вводите меньшее количество деталей, которые необходимо приобрести для них.

# import math

# students_class1 = int(input("Введите количество парт в классе 1: "))
# students_class2 = int(input("Введите количество парт в классе 2: "))
# students_class3 = int(input("Введите количество парт в классе 3: "))

# desks_class1 = math.ceil(students_class1 / 2)
# desks_class2 = math.ceil(students_class2 / 2)
# desks_class3 = math.ceil(students_class3 / 2)

# total_desks = desks_class1 + desks_class2 + desks_class3

# print(total_desks)

# Задача № 3.
# Вагоны в электричке пронумерованы натуральными числами,
# начиная с 1 (при этом вагоны нумеруются от "головы" поезда,
# а иногда - с "хвоста"; это зависит от того, в какую сторону
# едет электричка). В каждой машине был написан его номер.
# Витя сел в i-й вагон из поезда "головы" и обнаружил,
# что его вагон имеет номер j. Он хочет определить,
# сколько всего вагонов в электрике.

# i = int(input("Введите значение i: "))
# j = int(input("Введите значение j: "))

# if i == j:
#     print("Значения i и j совпадают. Для определения общего количества вагонов введите дополнительную информацию:")
#     last_wagon = int(input("Введите номер последнего вагона: "))
#     total_wagons = last_wagon
# else:
#     if i > j:
#         total_wagons = i + (i - j) + 1
#     else:
#         total_wagons = j + (j - i) + 1

# print("Количество вагонов:", total_wagons)

# Задача № 4.
# Дано натуральное число. Требуется определить,
# является ли год с данным номером високосным. Если
# год является високосным, то выведите YES, иначе
# выведите NO. Напомним, что в соответствии с
# григорианским календарем, год является
# високосным, если его номер кратен 4, но не кратен
# 100, а также если он кратен 400.

# def is_leap_year(year):
#     if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):
#         return "YES"
#     else:
#         return "NO"


# year = int(input("Введите год: "))
# print(is_leap_year(year))
